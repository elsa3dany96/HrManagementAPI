// <auto-generated />
using System;
using HrManagement.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HrManagement.EF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230712040018_asd")]
    partial class asd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HrManagement.Core.Models.ComeLate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateComeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayId")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("MasterIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Request")
                        .HasColumnType("bit");

                    b.Property<string>("discountId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DayId")
                        .IsUnique();

                    b.HasIndex("EmployeeIDPerson");

                    b.HasIndex("discountId")
                        .IsUnique()
                        .HasFilter("[discountId] IS NOT NULL");

                    b.ToTable("ComeLates");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Day", b =>
                {
                    b.Property<DateTime>("Id")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Attend")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIDPerson")
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime?>("Went")
                        .HasColumnType("datetime2");

                    b.Property<string>("comeLateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disAttendId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disRegisterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("extraTimeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wentEarlyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeIDPerson");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("HrManagement.Core.Models.DisRegister", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DayId")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("discountId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DayId")
                        .IsUnique();

                    b.HasIndex("EmployeeIDPerson");

                    b.HasIndex("discountId")
                        .IsUnique()
                        .HasFilter("[discountId] IS NOT NULL");

                    b.ToTable("DisRegisters");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Disattend", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DayId")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("MasterIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Request")
                        .HasColumnType("bit");

                    b.Property<string>("discountId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DayId")
                        .IsUnique();

                    b.HasIndex("EmployeeIDPerson");

                    b.ToTable("Disattends");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Discount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DiscountCost")
                        .HasColumnType("float");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comeLateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disAttendId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("disRegisterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wentEarlyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeIDPerson");

                    b.HasIndex("disAttendId")
                        .IsUnique()
                        .HasFilter("[disAttendId] IS NOT NULL");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Employee", b =>
                {
                    b.Property<string>("IDPerson")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FristName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("IDImg")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("InService")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MasterIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("fingerprint")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("stopRegister")
                        .HasColumnType("bit");

                    b.HasKey("IDPerson");

                    b.HasIndex("fingerprint")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HrManagement.Core.Models.ExtraTime", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DayId")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Hours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasterIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Request")
                        .HasColumnType("bit");

                    b.Property<string>("ponusId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DayId")
                        .IsUnique();

                    b.HasIndex("EmployeeIDPerson");

                    b.HasIndex("ponusId")
                        .IsUnique()
                        .HasFilter("[ponusId] IS NOT NULL");

                    b.ToTable("ExtraTimes");
                });

            modelBuilder.Entity("HrManagement.Core.Models.FireHireDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<bool>("Fired")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeIDPerson");

                    b.ToTable("FireHireDates");
                });

            modelBuilder.Entity("HrManagement.Core.Models.InformationAtendAndLeaving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Attend")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Leaving")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InformationAtendAndLeaving");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Ponus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<double>("PonusCost")
                        .HasColumnType("float");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("extraTimeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeIDPerson");

                    b.ToTable("Ponus");
                });

            modelBuilder.Entity("HrManagement.Core.Models.WentEarly", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DayId")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("MasterIDPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Rquest")
                        .HasColumnType("bit");

                    b.Property<string>("discountId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DayId")
                        .IsUnique();

                    b.HasIndex("EmployeeIDPerson");

                    b.HasIndex("discountId")
                        .IsUnique()
                        .HasFilter("[discountId] IS NOT NULL");

                    b.ToTable("WentEarlys");
                });

            modelBuilder.Entity("HrManagement.Core.Models.ComeLate", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Day", "Day")
                        .WithOne("ComeLate")
                        .HasForeignKey("HrManagement.Core.Models.ComeLate", "DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("ComeLate")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Discount", "Discount")
                        .WithOne("ComeLate")
                        .HasForeignKey("HrManagement.Core.Models.ComeLate", "discountId");

                    b.Navigation("Day");

                    b.Navigation("Discount");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Day", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Employee", null)
                        .WithMany("Days")
                        .HasForeignKey("EmployeeIDPerson");
                });

            modelBuilder.Entity("HrManagement.Core.Models.DisRegister", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Day", "Day")
                        .WithOne("DisRegister")
                        .HasForeignKey("HrManagement.Core.Models.DisRegister", "DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("DisRegister")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Discount", "Discount")
                        .WithOne("disRegister")
                        .HasForeignKey("HrManagement.Core.Models.DisRegister", "discountId");

                    b.Navigation("Day");

                    b.Navigation("Discount");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Disattend", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Day", "Day")
                        .WithOne("Disattend")
                        .HasForeignKey("HrManagement.Core.Models.Disattend", "DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("Disattend")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Day");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Discount", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("Discount")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Disattend", "disAttend")
                        .WithOne("Discount")
                        .HasForeignKey("HrManagement.Core.Models.Discount", "disAttendId");

                    b.Navigation("Employee");

                    b.Navigation("disAttend");
                });

            modelBuilder.Entity("HrManagement.Core.Models.ExtraTime", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Day", "Day")
                        .WithOne("ExtraTime")
                        .HasForeignKey("HrManagement.Core.Models.ExtraTime", "DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("ExtraTime")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Ponus", "Ponus")
                        .WithOne("ExtraTime")
                        .HasForeignKey("HrManagement.Core.Models.ExtraTime", "ponusId");

                    b.Navigation("Day");

                    b.Navigation("Employee");

                    b.Navigation("Ponus");
                });

            modelBuilder.Entity("HrManagement.Core.Models.FireHireDate", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("FireHireDate")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Ponus", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("Ponus")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrManagement.Core.Models.WentEarly", b =>
                {
                    b.HasOne("HrManagement.Core.Models.Day", "Day")
                        .WithOne("WentEarly")
                        .HasForeignKey("HrManagement.Core.Models.WentEarly", "DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Employee", "Employee")
                        .WithMany("WentEarly")
                        .HasForeignKey("EmployeeIDPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrManagement.Core.Models.Discount", "Discount")
                        .WithOne("wentEarly")
                        .HasForeignKey("HrManagement.Core.Models.WentEarly", "discountId");

                    b.Navigation("Day");

                    b.Navigation("Discount");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Day", b =>
                {
                    b.Navigation("ComeLate");

                    b.Navigation("DisRegister");

                    b.Navigation("Disattend");

                    b.Navigation("ExtraTime");

                    b.Navigation("WentEarly");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Disattend", b =>
                {
                    b.Navigation("Discount");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Discount", b =>
                {
                    b.Navigation("ComeLate");

                    b.Navigation("disRegister");

                    b.Navigation("wentEarly");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Employee", b =>
                {
                    b.Navigation("ComeLate");

                    b.Navigation("Days");

                    b.Navigation("DisRegister");

                    b.Navigation("Disattend");

                    b.Navigation("Discount");

                    b.Navigation("ExtraTime");

                    b.Navigation("FireHireDate");

                    b.Navigation("Ponus");

                    b.Navigation("WentEarly");
                });

            modelBuilder.Entity("HrManagement.Core.Models.Ponus", b =>
                {
                    b.Navigation("ExtraTime");
                });
#pragma warning restore 612, 618
        }
    }
}
